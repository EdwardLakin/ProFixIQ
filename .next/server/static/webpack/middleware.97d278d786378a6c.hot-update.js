/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabaseServer */ \"(middleware)/./src/lib/supabaseServer.ts\");\n/* harmony import */ var _lib_supabaseServer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_lib_supabaseServer__WEBPACK_IMPORTED_MODULE_1__);\n\n\nasync function middleware(req) {\n    const res = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    const supabase = (0,_lib_supabaseServer__WEBPACK_IMPORTED_MODULE_1__.createServerSupabaseClient)(req, res);\n    const PUBLIC_PATHS = [\n        '/',\n        '/sign-in',\n        '/sign-up',\n        '/api',\n        '/thank-you',\n        '/reset-password'\n    ];\n    const pathname = req.nextUrl.pathname;\n    // ✅ Allow access to public paths\n    if (PUBLIC_PATHS.some((path)=>pathname.startsWith(path))) {\n        return res;\n    }\n    try {\n        const { data: { session } } = await supabase.auth.getSession();\n        // ✅ DEBUG LOGGING\n        console.log('✅ SESSION:', session);\n        console.log('✅ USER:', session?.user);\n        if (!session || !session.user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/sign-in', req.url));\n        }\n        const { data: profile, error } = await supabase.from('profiles').select('plan').eq('id', session.user.id).single();\n        if (error || !profile) {\n            console.error('❌ Middleware profile error:', error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/sign-in', req.url));\n        }\n        const plan = profile.plan;\n        const restrictedProRoutes = [\n            '/quote',\n            '/inspections'\n        ];\n        const restrictedEliteRoutes = [\n            '/quote',\n            '/settings/shop'\n        ];\n        if (plan === 'diy' && restrictedProRoutes.some((path)=>pathname.startsWith(path))) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/upgrade', req.url));\n        }\n        if (plan === 'pro' && restrictedEliteRoutes.some((path)=>pathname.startsWith(path))) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/upgrade', req.url));\n        }\n        return res;\n    } catch (err) {\n        console.error('❌ Middleware error:', err);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/sign-in', req.url));\n    }\n}\nconst config = {\n    matcher: [\n        '/((?!_next/static|_next/image|favicon.ico).*)'\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbWlkZGxld2FyZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF3RDtBQUNVO0FBRzNELGVBQWVFLFdBQVdDLEdBQWdCO0lBQy9DLE1BQU1DLE1BQU1KLHFEQUFZQSxDQUFDSyxJQUFJO0lBQzdCLE1BQU1DLFdBQVdMLCtFQUEwQkEsQ0FBQ0UsS0FBS0M7SUFFakQsTUFBTUcsZUFBZTtRQUNuQjtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7S0FDRDtJQUVELE1BQU1DLFdBQVdMLElBQUlNLE9BQU8sQ0FBQ0QsUUFBUTtJQUVyQyxpQ0FBaUM7SUFDakMsSUFBSUQsYUFBYUcsSUFBSSxDQUFDLENBQUNDLE9BQVNILFNBQVNJLFVBQVUsQ0FBQ0QsUUFBUTtRQUMxRCxPQUFPUDtJQUNUO0lBRUEsSUFBSTtRQUNGLE1BQU0sRUFDSlMsTUFBTSxFQUFFQyxPQUFPLEVBQUUsRUFDbEIsR0FBRyxNQUFNUixTQUFTUyxJQUFJLENBQUNDLFVBQVU7UUFFbEMsa0JBQWtCO1FBQ2xCQyxRQUFRQyxHQUFHLENBQUMsY0FBY0o7UUFDMUJHLFFBQVFDLEdBQUcsQ0FBQyxXQUFXSixTQUFTSztRQUVoQyxJQUFJLENBQUNMLFdBQVcsQ0FBQ0EsUUFBUUssSUFBSSxFQUFFO1lBQzdCLE9BQU9uQixxREFBWUEsQ0FBQ29CLFFBQVEsQ0FBQyxJQUFJQyxJQUFJLFlBQVlsQixJQUFJbUIsR0FBRztRQUMxRDtRQUVBLE1BQU0sRUFDSlQsTUFBTVUsT0FBTyxFQUNiQyxLQUFLLEVBQ04sR0FBRyxNQUFNbEIsU0FDUG1CLElBQUksQ0FBQyxZQUNMQyxNQUFNLENBQUMsUUFDUEMsRUFBRSxDQUFDLE1BQU1iLFFBQVFLLElBQUksQ0FBQ1MsRUFBRSxFQUN4QkMsTUFBTTtRQUVULElBQUlMLFNBQVMsQ0FBQ0QsU0FBUztZQUNyQk4sUUFBUU8sS0FBSyxDQUFDLCtCQUErQkE7WUFDN0MsT0FBT3hCLHFEQUFZQSxDQUFDb0IsUUFBUSxDQUFDLElBQUlDLElBQUksWUFBWWxCLElBQUltQixHQUFHO1FBQzFEO1FBRUEsTUFBTVEsT0FBT1AsUUFBUU8sSUFBSTtRQUN6QixNQUFNQyxzQkFBc0I7WUFBQztZQUFVO1NBQWU7UUFDdEQsTUFBTUMsd0JBQXdCO1lBQUM7WUFBVTtTQUFpQjtRQUUxRCxJQUNFRixTQUFTLFNBQ1RDLG9CQUFvQnJCLElBQUksQ0FBQyxDQUFDQyxPQUFTSCxTQUFTSSxVQUFVLENBQUNELFFBQ3ZEO1lBQ0EsT0FBT1gscURBQVlBLENBQUNvQixRQUFRLENBQUMsSUFBSUMsSUFBSSxZQUFZbEIsSUFBSW1CLEdBQUc7UUFDMUQ7UUFFQSxJQUNFUSxTQUFTLFNBQ1RFLHNCQUFzQnRCLElBQUksQ0FBQyxDQUFDQyxPQUFTSCxTQUFTSSxVQUFVLENBQUNELFFBQ3pEO1lBQ0EsT0FBT1gscURBQVlBLENBQUNvQixRQUFRLENBQUMsSUFBSUMsSUFBSSxZQUFZbEIsSUFBSW1CLEdBQUc7UUFDMUQ7UUFFQSxPQUFPbEI7SUFDVCxFQUFFLE9BQU82QixLQUFLO1FBQ1poQixRQUFRTyxLQUFLLENBQUMsdUJBQXVCUztRQUNyQyxPQUFPakMscURBQVlBLENBQUNvQixRQUFRLENBQUMsSUFBSUMsSUFBSSxZQUFZbEIsSUFBSW1CLEdBQUc7SUFDMUQ7QUFDRjtBQUVPLE1BQU1ZLFNBQVM7SUFDcEJDLFNBQVM7UUFDUDtLQUNEO0FBQ0gsRUFBRSIsInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvUHJvRml4SVEvbWlkZGxld2FyZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgY3JlYXRlU2VydmVyU3VwYWJhc2VDbGllbnQgfSBmcm9tICdAL2xpYi9zdXBhYmFzZVNlcnZlcic7XG5pbXBvcnQgeyBEYXRhYmFzZSB9IGZyb20gJ0AvdHlwZXMvc3VwYWJhc2UnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWlkZGxld2FyZShyZXE6IE5leHRSZXF1ZXN0KSB7XG4gIGNvbnN0IHJlcyA9IE5leHRSZXNwb25zZS5uZXh0KCk7XG4gIGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlU2VydmVyU3VwYWJhc2VDbGllbnQocmVxLCByZXMpO1xuXG4gIGNvbnN0IFBVQkxJQ19QQVRIUyA9IFtcbiAgICAnLycsXG4gICAgJy9zaWduLWluJyxcbiAgICAnL3NpZ24tdXAnLFxuICAgICcvYXBpJyxcbiAgICAnL3RoYW5rLXlvdScsXG4gICAgJy9yZXNldC1wYXNzd29yZCcsXG4gIF07XG5cbiAgY29uc3QgcGF0aG5hbWUgPSByZXEubmV4dFVybC5wYXRobmFtZTtcblxuICAvLyDinIUgQWxsb3cgYWNjZXNzIHRvIHB1YmxpYyBwYXRoc1xuICBpZiAoUFVCTElDX1BBVEhTLnNvbWUoKHBhdGgpID0+IHBhdGhuYW1lLnN0YXJ0c1dpdGgocGF0aCkpKSB7XG4gICAgcmV0dXJuIHJlcztcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3Qge1xuICAgICAgZGF0YTogeyBzZXNzaW9uIH0sXG4gICAgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguZ2V0U2Vzc2lvbigpO1xuXG4gICAgLy8g4pyFIERFQlVHIExPR0dJTkdcbiAgICBjb25zb2xlLmxvZygn4pyFIFNFU1NJT046Jywgc2Vzc2lvbik7XG4gICAgY29uc29sZS5sb2coJ+KchSBVU0VSOicsIHNlc3Npb24/LnVzZXIpO1xuXG4gICAgaWYgKCFzZXNzaW9uIHx8ICFzZXNzaW9uLnVzZXIpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnL3NpZ24taW4nLCByZXEudXJsKSk7XG4gICAgfVxuXG4gICAgY29uc3Qge1xuICAgICAgZGF0YTogcHJvZmlsZSxcbiAgICAgIGVycm9yLFxuICAgIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oJ3Byb2ZpbGVzJylcbiAgICAgIC5zZWxlY3QoJ3BsYW4nKVxuICAgICAgLmVxKCdpZCcsIHNlc3Npb24udXNlci5pZClcbiAgICAgIC5zaW5nbGUoKTtcblxuICAgIGlmIChlcnJvciB8fCAhcHJvZmlsZSkge1xuICAgICAgY29uc29sZS5lcnJvcign4p2MIE1pZGRsZXdhcmUgcHJvZmlsZSBlcnJvcjonLCBlcnJvcik7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoJy9zaWduLWluJywgcmVxLnVybCkpO1xuICAgIH1cblxuICAgIGNvbnN0IHBsYW4gPSBwcm9maWxlLnBsYW47XG4gICAgY29uc3QgcmVzdHJpY3RlZFByb1JvdXRlcyA9IFsnL3F1b3RlJywgJy9pbnNwZWN0aW9ucyddO1xuICAgIGNvbnN0IHJlc3RyaWN0ZWRFbGl0ZVJvdXRlcyA9IFsnL3F1b3RlJywgJy9zZXR0aW5ncy9zaG9wJ107XG5cbiAgICBpZiAoXG4gICAgICBwbGFuID09PSAnZGl5JyAmJlxuICAgICAgcmVzdHJpY3RlZFByb1JvdXRlcy5zb21lKChwYXRoKSA9PiBwYXRobmFtZS5zdGFydHNXaXRoKHBhdGgpKVxuICAgICkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKCcvdXBncmFkZScsIHJlcS51cmwpKTtcbiAgICB9XG5cbiAgICBpZiAoXG4gICAgICBwbGFuID09PSAncHJvJyAmJlxuICAgICAgcmVzdHJpY3RlZEVsaXRlUm91dGVzLnNvbWUoKHBhdGgpID0+IHBhdGhuYW1lLnN0YXJ0c1dpdGgocGF0aCkpXG4gICAgKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoJy91cGdyYWRlJywgcmVxLnVybCkpO1xuICAgIH1cblxuICAgIHJldHVybiByZXM7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBNaWRkbGV3YXJlIGVycm9yOicsIGVycik7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKCcvc2lnbi1pbicsIHJlcS51cmwpKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBtYXRjaGVyOiBbXG4gICAgJy8oKD8hX25leHQvc3RhdGljfF9uZXh0L2ltYWdlfGZhdmljb24uaWNvKS4qKScsXG4gIF0sXG59OyJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJjcmVhdGVTZXJ2ZXJTdXBhYmFzZUNsaWVudCIsIm1pZGRsZXdhcmUiLCJyZXEiLCJyZXMiLCJuZXh0Iiwic3VwYWJhc2UiLCJQVUJMSUNfUEFUSFMiLCJwYXRobmFtZSIsIm5leHRVcmwiLCJzb21lIiwicGF0aCIsInN0YXJ0c1dpdGgiLCJkYXRhIiwic2Vzc2lvbiIsImF1dGgiLCJnZXRTZXNzaW9uIiwiY29uc29sZSIsImxvZyIsInVzZXIiLCJyZWRpcmVjdCIsIlVSTCIsInVybCIsInByb2ZpbGUiLCJlcnJvciIsImZyb20iLCJzZWxlY3QiLCJlcSIsImlkIiwic2luZ2xlIiwicGxhbiIsInJlc3RyaWN0ZWRQcm9Sb3V0ZXMiLCJyZXN0cmljdGVkRWxpdGVSb3V0ZXMiLCJlcnIiLCJjb25maWciLCJtYXRjaGVyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ }),

/***/ "(middleware)/./src/lib/supabaseServer.ts":
/*!***********************************!*\
  !*** ./src/lib/supabaseServer.ts ***!
  \***********************************/
/***/ (() => {

eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIobWlkZGxld2FyZSkvLi9zcmMvbGliL3N1cGFiYXNlU2VydmVyLnRzIiwic291cmNlUm9vdCI6IiIsImlnbm9yZUxpc3QiOltdfQ==\n//# sourceURL=webpack-internal:///(middleware)/./src/lib/supabaseServer.ts\n");

/***/ })

});