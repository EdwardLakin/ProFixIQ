"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/inspection/maintenance50/page",{

/***/ "(app-pages-browser)/./src/components/inspection/interpretCommand.ts":
/*!*******************************************************!*\
  !*** ./src/components/inspection/interpretCommand.ts ***!
  \*******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   interpretCommand: () => (/* binding */ interpretCommand)\n/* harmony export */ });\n// src/lib/inspection/interpretCommand.ts\nconst interpretCommand = async (transcript)=>{\n    try {\n        const response = await fetch('/api/ai/interpret', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                transcript\n            })\n        });\n        if (!response.ok) {\n            console.error('Interpretation request failed');\n            return [];\n        }\n        const data = await response.json();\n        if (!Array.isArray(data)) {\n            console.warn('Unexpected AI response format:', data);\n            return [];\n        }\n        return data;\n    } catch (error) {\n        console.error('Interpretation error:', error);\n        return [];\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL2luc3BlY3Rpb24vaW50ZXJwcmV0Q29tbWFuZC50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEseUNBQXlDO0FBSWxDLE1BQU1BLG1CQUFtQixPQUFPQztJQUNyQyxJQUFJO1FBQ0YsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLHFCQUFxQjtZQUNoREMsUUFBUTtZQUNSQyxTQUFTO2dCQUNQLGdCQUFnQjtZQUNsQjtZQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7Z0JBQUVQO1lBQVc7UUFDcEM7UUFFQSxJQUFJLENBQUNDLFNBQVNPLEVBQUUsRUFBRTtZQUNoQkMsUUFBUUMsS0FBSyxDQUFDO1lBQ2QsT0FBTyxFQUFFO1FBQ1g7UUFFQSxNQUFNQyxPQUFPLE1BQU1WLFNBQVNXLElBQUk7UUFFaEMsSUFBSSxDQUFDQyxNQUFNQyxPQUFPLENBQUNILE9BQU87WUFDeEJGLFFBQVFNLElBQUksQ0FBQyxrQ0FBa0NKO1lBQy9DLE9BQU8sRUFBRTtRQUNYO1FBRUEsT0FBT0E7SUFDVCxFQUFFLE9BQU9ELE9BQU87UUFDZEQsUUFBUUMsS0FBSyxDQUFDLHlCQUF5QkE7UUFDdkMsT0FBTyxFQUFFO0lBQ1g7QUFDRixFQUFFIiwic291cmNlcyI6WyIvd29ya3NwYWNlcy9Qcm9GaXhJUS9zcmMvY29tcG9uZW50cy9pbnNwZWN0aW9uL2ludGVycHJldENvbW1hbmQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9pbnNwZWN0aW9uL2ludGVycHJldENvbW1hbmQudHNcblxuaW1wb3J0IHsgUGFyc2VkQ29tbWFuZCB9IGZyb20gJ0BsaWIvaW5zcGVjdGlvbi90eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBpbnRlcnByZXRDb21tYW5kID0gYXN5bmMgKHRyYW5zY3JpcHQ6IHN0cmluZyk6IFByb21pc2U8UGFyc2VkQ29tbWFuZFtdPiA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9haS9pbnRlcnByZXQnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHRyYW5zY3JpcHQgfSksXG4gICAgfSk7XG5cbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdJbnRlcnByZXRhdGlvbiByZXF1ZXN0IGZhaWxlZCcpO1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoZGF0YSkpIHtcbiAgICAgIGNvbnNvbGUud2FybignVW5leHBlY3RlZCBBSSByZXNwb25zZSBmb3JtYXQ6JywgZGF0YSk7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuXG4gICAgcmV0dXJuIGRhdGEgYXMgUGFyc2VkQ29tbWFuZFtdO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0ludGVycHJldGF0aW9uIGVycm9yOicsIGVycm9yKTtcbiAgICByZXR1cm4gW107XG4gIH1cbn07Il0sIm5hbWVzIjpbImludGVycHJldENvbW1hbmQiLCJ0cmFuc2NyaXB0IiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm9rIiwiY29uc29sZSIsImVycm9yIiwiZGF0YSIsImpzb24iLCJBcnJheSIsImlzQXJyYXkiLCJ3YXJuIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/inspection/interpretCommand.ts\n"));

/***/ })

});