"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/ai/photo/page",{

/***/ "(app-pages-browser)/./src/lib/analyzeComponents.ts":
/*!**************************************!*\
  !*** ./src/lib/analyzeComponents.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeImageComponents: () => (/* binding */ analyzeImageComponents)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"(app-pages-browser)/./node_modules/openai/index.mjs\");\n/* harmony import */ var _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabaseClient */ \"(app-pages-browser)/./src/lib/supabaseClient.ts\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils */ \"(app-pages-browser)/./src/lib/utils.ts\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n\n\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_0__.OpenAI({\n    apiKey: process.env.OPENAI_API_KEY\n});\nasync function analyzeImageComponents(imageUrl, vehicle, userId) {\n    var _response_choices__message, _response_choices_, _response_choices;\n    const vehicleDescription = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.getVehicleDescription)(vehicle);\n    const prompt = \"\\nYou are a highly skilled automotive technician. A user has submitted a photo for visual diagnosis. The vehicle is a \".concat(vehicleDescription, '. Analyze the visible components and return the top 3 visible issues. \\nFor each issue, extract and format the result using this schema:\\n\\nComplaint: (short phrase describing the issue)\\nCause: (likely cause of issue)\\nCorrection: (how to fix it)\\nTools: (comma-separated list of tools required)\\nLabor Time: (estimate in hours or minutes, e.g. \"1.2 hr\")\\n\\nOnly return issues visible in the photo. Avoid listing generic causes. Keep it under 750 words total.\\n');\n    const response = await openai.chat.completions.create({\n        model: 'gpt-4o',\n        messages: [\n            {\n                role: 'system',\n                content: 'You are an expert automotive technician diagnosing issues from photos.'\n            },\n            {\n                role: 'user',\n                content: [\n                    {\n                        type: 'text',\n                        text: prompt\n                    },\n                    {\n                        type: 'image_url',\n                        image_url: {\n                            url: imageUrl\n                        }\n                    }\n                ]\n            }\n        ],\n        temperature: 0.7\n    });\n    const rawText = ((_response_choices = response.choices) === null || _response_choices === void 0 ? void 0 : (_response_choices_ = _response_choices[0]) === null || _response_choices_ === void 0 ? void 0 : (_response_choices__message = _response_choices_.message) === null || _response_choices__message === void 0 ? void 0 : _response_choices__message.content) || '';\n    const issues = rawText.split(/Complaint:/).slice(1).map((chunk)=>{\n        const [complaint, causePart] = chunk.split(/Cause:/);\n        const [cause, correctionPart] = (causePart || '').split(/Correction:/);\n        const [correction, toolsPart] = (correctionPart || '').split(/Tools:/);\n        const [tools, laborTimePart] = (toolsPart || '').split(/Labor Time:/);\n        const labor_time = laborTimePart === null || laborTimePart === void 0 ? void 0 : laborTimePart.trim();\n        return {\n            complaint: complaint === null || complaint === void 0 ? void 0 : complaint.trim(),\n            cause: cause === null || cause === void 0 ? void 0 : cause.trim(),\n            correction: correction === null || correction === void 0 ? void 0 : correction.trim(),\n            tools: tools === null || tools === void 0 ? void 0 : tools.trim(),\n            labor_time\n        };\n    });\n    // Save each issue to work order lines (optional enhancement)\n    for (const issue of issues){\n        await _lib_supabaseClient__WEBPACK_IMPORTED_MODULE_1__.supabase.from('work_order_lines').insert({\n            user_id: userId,\n            vehicle_year: vehicle.year,\n            vehicle_make: vehicle.make,\n            vehicle_model: vehicle.model,\n            complaint: issue.complaint,\n            cause: issue.cause,\n            correction: issue.correction,\n            tools: issue.tools,\n            labor_time: issue.labor_time,\n            source: 'visual_diagnosis'\n        });\n    }\n    return issues;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvYW5hbHl6ZUNvbXBvbmVudHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBZ0M7QUFDZ0I7QUFDSTtBQUdwRCxNQUFNRyxTQUFTLElBQUlILDBDQUFNQSxDQUFDO0lBQUVJLFFBQVFDLE9BQU9BLENBQUNDLEdBQUcsQ0FBQ0MsY0FBYztBQUFDO0FBVXhELGVBQWVDLHVCQUNwQkMsUUFBZ0IsRUFDaEJDLE9BSUMsRUFDREMsTUFBYztRQW1DRUMsNEJBQUFBLG9CQUFBQTtJQWpDaEIsTUFBTUMscUJBQXFCWCxpRUFBcUJBLENBQUNRO0lBQ2pELE1BQU1JLFNBQVMseUhBQ3dILE9BQW5CRCxvQkFBbUI7SUFZdkksTUFBTUQsV0FBVyxNQUFNVCxPQUFPWSxJQUFJLENBQUNDLFdBQVcsQ0FBQ0MsTUFBTSxDQUFDO1FBQ3BEQyxPQUFPO1FBQ1BDLFVBQVU7WUFDUjtnQkFDRUMsTUFBTTtnQkFDTkMsU0FDRTtZQUNKO1lBQ0E7Z0JBQ0VELE1BQU07Z0JBQ05DLFNBQVM7b0JBQ1A7d0JBQUVDLE1BQU07d0JBQVFDLE1BQU1UO29CQUFPO29CQUM3Qjt3QkFBRVEsTUFBTTt3QkFBYUUsV0FBVzs0QkFBRUMsS0FBS2hCO3dCQUFTO29CQUFFO2lCQUNuRDtZQUNIO1NBQ0Q7UUFDRGlCLGFBQWE7SUFDZjtJQUVBLE1BQU1DLFVBQVVmLEVBQUFBLG9CQUFBQSxTQUFTZ0IsT0FBTyxjQUFoQmhCLHlDQUFBQSxxQkFBQUEsaUJBQWtCLENBQUMsRUFBRSxjQUFyQkEsMENBQUFBLDZCQUFBQSxtQkFBdUJpQixPQUFPLGNBQTlCakIsaURBQUFBLDJCQUFnQ1MsT0FBTyxLQUFJO0lBRTNELE1BQU1TLFNBQVNILFFBQ1pJLEtBQUssQ0FBQyxjQUNOQyxLQUFLLENBQUMsR0FDTkMsR0FBRyxDQUFDLENBQUNDO1FBQ0osTUFBTSxDQUFDQyxXQUFXQyxVQUFVLEdBQUdGLE1BQU1ILEtBQUssQ0FBQztRQUMzQyxNQUFNLENBQUNNLE9BQU9DLGVBQWUsR0FBRyxDQUFDRixhQUFhLEVBQUMsRUFBR0wsS0FBSyxDQUFDO1FBQ3hELE1BQU0sQ0FBQ1EsWUFBWUMsVUFBVSxHQUFHLENBQUNGLGtCQUFrQixFQUFDLEVBQUdQLEtBQUssQ0FBQztRQUM3RCxNQUFNLENBQUNVLE9BQU9DLGNBQWMsR0FBRyxDQUFDRixhQUFhLEVBQUMsRUFBR1QsS0FBSyxDQUFDO1FBQ3ZELE1BQU1ZLGFBQWFELDBCQUFBQSxvQ0FBQUEsY0FBZUUsSUFBSTtRQUV0QyxPQUFPO1lBQ0xULFNBQVMsRUFBRUEsc0JBQUFBLGdDQUFBQSxVQUFXUyxJQUFJO1lBQzFCUCxLQUFLLEVBQUVBLGtCQUFBQSw0QkFBQUEsTUFBT08sSUFBSTtZQUNsQkwsVUFBVSxFQUFFQSx1QkFBQUEsaUNBQUFBLFdBQVlLLElBQUk7WUFDNUJILEtBQUssRUFBRUEsa0JBQUFBLDRCQUFBQSxNQUFPRyxJQUFJO1lBQ2xCRDtRQUNGO0lBQ0Y7SUFFRiw2REFBNkQ7SUFDN0QsS0FBSyxNQUFNRSxTQUFTZixPQUFRO1FBQzFCLE1BQU03Qix5REFBUUEsQ0FBQzZDLElBQUksQ0FBQyxvQkFBb0JDLE1BQU0sQ0FBQztZQUM3Q0MsU0FBU3JDO1lBQ1RzQyxjQUFjdkMsUUFBUXdDLElBQUk7WUFDMUJDLGNBQWN6QyxRQUFRMEMsSUFBSTtZQUMxQkMsZUFBZTNDLFFBQVFRLEtBQUs7WUFDNUJpQixXQUFXVSxNQUFNVixTQUFTO1lBQzFCRSxPQUFPUSxNQUFNUixLQUFLO1lBQ2xCRSxZQUFZTSxNQUFNTixVQUFVO1lBQzVCRSxPQUFPSSxNQUFNSixLQUFLO1lBQ2xCRSxZQUFZRSxNQUFNRixVQUFVO1lBQzVCVyxRQUFRO1FBQ1Y7SUFDRjtJQUVBLE9BQU94QjtBQUNUIiwic291cmNlcyI6WyIvd29ya3NwYWNlcy9Qcm9GaXhJUS9zcmMvbGliL2FuYWx5emVDb21wb25lbnRzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9wZW5BSSB9IGZyb20gJ29wZW5haSc7XG5pbXBvcnQgeyBzdXBhYmFzZSB9IGZyb20gJ0AvbGliL3N1cGFiYXNlQ2xpZW50JztcbmltcG9ydCB7IGdldFZlaGljbGVEZXNjcmlwdGlvbiB9IGZyb20gJ0AvbGliL3V0aWxzJztcbmltcG9ydCB7IERhdGFiYXNlIH0gZnJvbSAnQC90eXBlcy9zdXBhYmFzZSc7XG5cbmNvbnN0IG9wZW5haSA9IG5ldyBPcGVuQUkoeyBhcGlLZXk6IHByb2Nlc3MuZW52Lk9QRU5BSV9BUElfS0VZIH0pO1xuXG50eXBlIEFuYWx5emVSZXN1bHQgPSB7XG4gIGNvbXBsYWludDogc3RyaW5nO1xuICBjYXVzZTogc3RyaW5nO1xuICBjb3JyZWN0aW9uOiBzdHJpbmc7XG4gIHRvb2xzPzogc3RyaW5nO1xuICBsYWJvcl90aW1lPzogc3RyaW5nO1xufTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFuYWx5emVJbWFnZUNvbXBvbmVudHMoXG4gIGltYWdlVXJsOiBzdHJpbmcsXG4gIHZlaGljbGU6IHtcbiAgICB5ZWFyOiBzdHJpbmc7XG4gICAgbWFrZTogc3RyaW5nO1xuICAgIG1vZGVsOiBzdHJpbmc7XG4gIH0sXG4gIHVzZXJJZDogc3RyaW5nXG4pOiBQcm9taXNlPEFuYWx5emVSZXN1bHRbXT4ge1xuICBjb25zdCB2ZWhpY2xlRGVzY3JpcHRpb24gPSBnZXRWZWhpY2xlRGVzY3JpcHRpb24odmVoaWNsZSk7XG4gIGNvbnN0IHByb21wdCA9IGBcbllvdSBhcmUgYSBoaWdobHkgc2tpbGxlZCBhdXRvbW90aXZlIHRlY2huaWNpYW4uIEEgdXNlciBoYXMgc3VibWl0dGVkIGEgcGhvdG8gZm9yIHZpc3VhbCBkaWFnbm9zaXMuIFRoZSB2ZWhpY2xlIGlzIGEgJHt2ZWhpY2xlRGVzY3JpcHRpb259LiBBbmFseXplIHRoZSB2aXNpYmxlIGNvbXBvbmVudHMgYW5kIHJldHVybiB0aGUgdG9wIDMgdmlzaWJsZSBpc3N1ZXMuIFxuRm9yIGVhY2ggaXNzdWUsIGV4dHJhY3QgYW5kIGZvcm1hdCB0aGUgcmVzdWx0IHVzaW5nIHRoaXMgc2NoZW1hOlxuXG5Db21wbGFpbnQ6IChzaG9ydCBwaHJhc2UgZGVzY3JpYmluZyB0aGUgaXNzdWUpXG5DYXVzZTogKGxpa2VseSBjYXVzZSBvZiBpc3N1ZSlcbkNvcnJlY3Rpb246IChob3cgdG8gZml4IGl0KVxuVG9vbHM6IChjb21tYS1zZXBhcmF0ZWQgbGlzdCBvZiB0b29scyByZXF1aXJlZClcbkxhYm9yIFRpbWU6IChlc3RpbWF0ZSBpbiBob3VycyBvciBtaW51dGVzLCBlLmcuIFwiMS4yIGhyXCIpXG5cbk9ubHkgcmV0dXJuIGlzc3VlcyB2aXNpYmxlIGluIHRoZSBwaG90by4gQXZvaWQgbGlzdGluZyBnZW5lcmljIGNhdXNlcy4gS2VlcCBpdCB1bmRlciA3NTAgd29yZHMgdG90YWwuXG5gO1xuXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgb3BlbmFpLmNoYXQuY29tcGxldGlvbnMuY3JlYXRlKHtcbiAgICBtb2RlbDogJ2dwdC00bycsXG4gICAgbWVzc2FnZXM6IFtcbiAgICAgIHtcbiAgICAgICAgcm9sZTogJ3N5c3RlbScsXG4gICAgICAgIGNvbnRlbnQ6XG4gICAgICAgICAgJ1lvdSBhcmUgYW4gZXhwZXJ0IGF1dG9tb3RpdmUgdGVjaG5pY2lhbiBkaWFnbm9zaW5nIGlzc3VlcyBmcm9tIHBob3Rvcy4nLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcm9sZTogJ3VzZXInLFxuICAgICAgICBjb250ZW50OiBbXG4gICAgICAgICAgeyB0eXBlOiAndGV4dCcsIHRleHQ6IHByb21wdCB9LFxuICAgICAgICAgIHsgdHlwZTogJ2ltYWdlX3VybCcsIGltYWdlX3VybDogeyB1cmw6IGltYWdlVXJsIH0gfSxcbiAgICAgICAgXSxcbiAgICAgIH0sXG4gICAgXSxcbiAgICB0ZW1wZXJhdHVyZTogMC43LFxuICB9KTtcblxuICBjb25zdCByYXdUZXh0ID0gcmVzcG9uc2UuY2hvaWNlcz8uWzBdPy5tZXNzYWdlPy5jb250ZW50IHx8ICcnO1xuXG4gIGNvbnN0IGlzc3VlcyA9IHJhd1RleHRcbiAgICAuc3BsaXQoL0NvbXBsYWludDovKVxuICAgIC5zbGljZSgxKVxuICAgIC5tYXAoKGNodW5rKSA9PiB7XG4gICAgICBjb25zdCBbY29tcGxhaW50LCBjYXVzZVBhcnRdID0gY2h1bmsuc3BsaXQoL0NhdXNlOi8pO1xuICAgICAgY29uc3QgW2NhdXNlLCBjb3JyZWN0aW9uUGFydF0gPSAoY2F1c2VQYXJ0IHx8ICcnKS5zcGxpdCgvQ29ycmVjdGlvbjovKTtcbiAgICAgIGNvbnN0IFtjb3JyZWN0aW9uLCB0b29sc1BhcnRdID0gKGNvcnJlY3Rpb25QYXJ0IHx8ICcnKS5zcGxpdCgvVG9vbHM6Lyk7XG4gICAgICBjb25zdCBbdG9vbHMsIGxhYm9yVGltZVBhcnRdID0gKHRvb2xzUGFydCB8fCAnJykuc3BsaXQoL0xhYm9yIFRpbWU6Lyk7XG4gICAgICBjb25zdCBsYWJvcl90aW1lID0gbGFib3JUaW1lUGFydD8udHJpbSgpO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBjb21wbGFpbnQ6IGNvbXBsYWludD8udHJpbSgpLFxuICAgICAgICBjYXVzZTogY2F1c2U/LnRyaW0oKSxcbiAgICAgICAgY29ycmVjdGlvbjogY29ycmVjdGlvbj8udHJpbSgpLFxuICAgICAgICB0b29sczogdG9vbHM/LnRyaW0oKSxcbiAgICAgICAgbGFib3JfdGltZSxcbiAgICAgIH07XG4gICAgfSk7XG5cbiAgLy8gU2F2ZSBlYWNoIGlzc3VlIHRvIHdvcmsgb3JkZXIgbGluZXMgKG9wdGlvbmFsIGVuaGFuY2VtZW50KVxuICBmb3IgKGNvbnN0IGlzc3VlIG9mIGlzc3Vlcykge1xuICAgIGF3YWl0IHN1cGFiYXNlLmZyb20oJ3dvcmtfb3JkZXJfbGluZXMnKS5pbnNlcnQoe1xuICAgICAgdXNlcl9pZDogdXNlcklkLFxuICAgICAgdmVoaWNsZV95ZWFyOiB2ZWhpY2xlLnllYXIsXG4gICAgICB2ZWhpY2xlX21ha2U6IHZlaGljbGUubWFrZSxcbiAgICAgIHZlaGljbGVfbW9kZWw6IHZlaGljbGUubW9kZWwsXG4gICAgICBjb21wbGFpbnQ6IGlzc3VlLmNvbXBsYWludCxcbiAgICAgIGNhdXNlOiBpc3N1ZS5jYXVzZSxcbiAgICAgIGNvcnJlY3Rpb246IGlzc3VlLmNvcnJlY3Rpb24sXG4gICAgICB0b29sczogaXNzdWUudG9vbHMsXG4gICAgICBsYWJvcl90aW1lOiBpc3N1ZS5sYWJvcl90aW1lLFxuICAgICAgc291cmNlOiAndmlzdWFsX2RpYWdub3NpcycsXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gaXNzdWVzO1xufSJdLCJuYW1lcyI6WyJPcGVuQUkiLCJzdXBhYmFzZSIsImdldFZlaGljbGVEZXNjcmlwdGlvbiIsIm9wZW5haSIsImFwaUtleSIsInByb2Nlc3MiLCJlbnYiLCJPUEVOQUlfQVBJX0tFWSIsImFuYWx5emVJbWFnZUNvbXBvbmVudHMiLCJpbWFnZVVybCIsInZlaGljbGUiLCJ1c2VySWQiLCJyZXNwb25zZSIsInZlaGljbGVEZXNjcmlwdGlvbiIsInByb21wdCIsImNoYXQiLCJjb21wbGV0aW9ucyIsImNyZWF0ZSIsIm1vZGVsIiwibWVzc2FnZXMiLCJyb2xlIiwiY29udGVudCIsInR5cGUiLCJ0ZXh0IiwiaW1hZ2VfdXJsIiwidXJsIiwidGVtcGVyYXR1cmUiLCJyYXdUZXh0IiwiY2hvaWNlcyIsIm1lc3NhZ2UiLCJpc3N1ZXMiLCJzcGxpdCIsInNsaWNlIiwibWFwIiwiY2h1bmsiLCJjb21wbGFpbnQiLCJjYXVzZVBhcnQiLCJjYXVzZSIsImNvcnJlY3Rpb25QYXJ0IiwiY29ycmVjdGlvbiIsInRvb2xzUGFydCIsInRvb2xzIiwibGFib3JUaW1lUGFydCIsImxhYm9yX3RpbWUiLCJ0cmltIiwiaXNzdWUiLCJmcm9tIiwiaW5zZXJ0IiwidXNlcl9pZCIsInZlaGljbGVfeWVhciIsInllYXIiLCJ2ZWhpY2xlX21ha2UiLCJtYWtlIiwidmVoaWNsZV9tb2RlbCIsInNvdXJjZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/analyzeComponents.ts\n"));

/***/ })

});