import jsPDF from "jspdf";
import autoTable from "jspdf-autotable";
import { formatCurrency } from "@shared/lib/formatters";
import { createClientComponentClient } from "@supabase/auth-helpers-nextjs";

import type { Database } from "@shared/types/types/supabase";

  const supabase = createClientComponentClient<Database>();


type StatsTotals = {
  revenue: number;
  profit: number;
  labor: number;
  expenses: number;
  jobs: number;
  techEfficiency: number;
};

type ShopStats = {
  shop_id: string;
  start: string;
  end: string;
  total: StatsTotals;
};

export async function generateStatsPDF(
  stats: ShopStats,
  aiSummary: string,
  range: string,
  chartImgData: string,
): Promise<Blob> {
  const { data: shop } = await supabase
    .from("shops")
    .select("name, address, phone_number, email, logo_url")
    .eq("id", stats.shop_id)
    .single();

  const doc = new jsPDF();

  // üè™ Logo (if available)
  if (shop?.logo_url) {
    try {
      const imgRes = await fetch(shop.logo_url);
      const imgBlob = await imgRes.blob();
      const reader = new FileReader();
      const base64 = await new Promise<string>((resolve) => {
        reader.onloadend = () => resolve(reader.result as string);
        reader.readAsDataURL(imgBlob);
      });
      doc.addImage(base64, "PNG", 15, 10, 40, 20);
    } catch (err) {
      console.warn("Logo failed to load:", err);
    }
  }

  // üßæ Header Info
  doc.setFontSize(16);
  doc.text(shop?.name || "Shop Report", 15, 40);
  doc.setFontSize(12);
  doc.text(`Time Range: ${range}`, 15, 48);
  doc.text(`From: ${stats.start}`, 15, 54);
  doc.text(`To: ${stats.end}`, 15, 60);

  // üìä Stats Table
  autoTable(doc, {
    startY: 70,
    head: [["Metric", "Value"]],
    body: [
      ["Total Revenue", formatCurrency(stats.total.revenue)],
      ["Total Profit", formatCurrency(stats.total.profit)],
      ["Labor Cost", formatCurrency(stats.total.labor)],
      ["Expenses", formatCurrency(stats.total.expenses)],
      ["Jobs", stats.total.jobs.toString()],
      ["Tech Efficiency", `${stats.total.techEfficiency.toFixed(2)}%`],
    ],
    theme: "grid",
    headStyles: { fillColor: [255, 165, 0] },
  });

  // üìà Chart Page
  if (chartImgData) {
    doc.addPage();
    doc.setFontSize(14);
    doc.text("Performance Chart", 15, 20);
    doc.addImage(chartImgData, "PNG", 15, 30, 180, 100);
  }

  // üß† AI Summary Page
  if (aiSummary) {
    doc.addPage();
    doc.setFontSize(14);
    doc.text("AI Summary", 15, 20);
    const summaryLines = doc.splitTextToSize(aiSummary, 180);
    doc.setFontSize(11);
    doc.text(summaryLines, 15, 30);
  }

  // üîª Footer
  doc.setFontSize(10);
  doc.setTextColor(100);
  doc.text(
    `Generated by ProFix ‚Äì ${shop?.email || ""} ‚Ä¢ ${shop?.phone_number || ""}`,
    15,
    285,
  );

  return doc.output("blob");
}
